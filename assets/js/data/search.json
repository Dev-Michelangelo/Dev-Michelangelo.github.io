[ { "title": "What is Java ORM - Object Relational Mapping", "url": "/posts/WhatIsJavaORM/", "categories": "Language, Java", "tags": "what_is", "date": "2022-03-19 03:22:00 +0900", "snippet": "Impedance Mismatch(객체-관계 불일치)RDB 는 많은 장점을 가지고 있지만, 완벽하지 않아 초창기에 불만이 많았습니다. 그 중 애플리케이션 개발자의대표적인 불만은 관계형 모델과 메모리 내 구조간 차이, 객체-관계 불일치 입니다.관계형 데이터 모델은 테이블과 행으로 데이터 즉, 관계와 튜플로 데이터를 구조화 합니다.관계형 모델에서 튜플은 이름-값의 집합이고, 관계는 튜플의 집합입니다. SQL 에서 모든 연산은 관계를 소비하고반환하는데 이는 관계 대수로 설명합니다. 상술한 관계의 기반은 단순함을 제공하지만 제약이 생기게 되는데특히 관계형 튜플 안의 값은 단순해야 하고, 중첩된 레코드나 리스트 등 다른 구조를 포함할 수 없습니다.그 결과, 위와 같은 제약이 없어 상대적으로 관계보다 복잡한 구조를 사용할 수 있는 메모리 내 데이터 구조를DB 에 저장하기 위해, 관계형 표현으로 변환이 필요하게 됩니다.1990 년대에는 RDB 가 메모리내 데이터 구조를 그대로 디스크에 저장하는 새로운 DB 로 대체 될 것이라생각 했습니다. 당시, OOP 가 성장 하고, ODB 가 등장 했었기 때문인데, 현재와서 살펴보면 OOP 와 달리ODB 는 성장하지 못했습니다. RDB 가 통합 방법으로서의 역할 강조, 데이터 조작을 위한 표준언어(SQL) 지원애플리케이션 개발자와 DB 관리자 직종 분리 심화 등의 요인에 힘을 입었기 때문입니다.A. 세분성 (Granularity): 경우에 따라 DB 내 테이블 수보다 더 많은 클래스를 가진 모델이 생길 수 있음.(RDB 데이터 타입은 Vendor 마다 상이하며, 더 이상 정규화가 어렵습니다.)B. 상속성 (Inheritance): RDBMS 는 Primary key 를 이용하여 동일성을 적용합니다.하지만 Java 는 객체 식별 (a==b) 과 객체 동일성(a.equals(b)) 을 모두 정의 합니다.C. 연관성 (Associations): OOP 는 방향성 있는 객체의 참조(reference)를 사용해연관성을 나타내지만, RDBMS는 방향성이 없는 외래키(foreign key)를 이용해서 나타냅니다.D. 탐색 (Navigation): Java 와 RDBMS 에서 객체를 접근하는 방법이 근본적으로 다릅니다.Java 는 그래프형태로 하나의 연결에서 다른 연결로 이동하며 탐색하지만, RDBMS 는 일반적으로 SQL 문을최소화하고 JOIN 을 통해 여러 엔티티를 로드하고 원하는 대상 엔티티를 선택하는 방식으로 탐색합니다.ORM(Object Relational Mapping)ORM 은 객체의 관계를 바탕으로 SQL 문에 관해 자동적으로 생성 불일치를 해결합니다.Pros and ConsProsA. 객체 지향적 코드로 인해, 보다 직관적이며, 비즈니스로직 에 집중할 수 있습니다.B. 재사용, 유지보수의 편리성이 증가합니다.C. DBMS 에 대한 종속성이 줄어듭니다.ConsA. ORM 으로만 서비스를 구현하기엔 한계가 있습니다.B. 프로시저가 많은 시스템에선 ORM의 객체 지향적인 장점을 활용하기 어렵습니다.매핑패턴을 구현한 iBATIS 나 Hibernate 와 같은 객체-관계 매핑 프레임워크가 널리 사용되면서객체-관계 불일치 이슈는 완화 되었지만, 상술한 것과 같이 DB 나 쿼리 성능을 지나치게 무시하면 다른 문제가발생할 수 있습니다." }, { "title": "Oracle21C Connect for STS4 - OracleDB 연결하기(21C)", "url": "/posts/Oracle21CPluginforSTS4/", "categories": "WindowOS, WebDev-Setting", "tags": "setting", "date": "2022-03-18 05:41:00 +0900", "snippet": "환경 11th Gen Intel(R) Core(TM) i5-1135G7 @ 2.40GHz 2.40 GHz, RAM: 8.00GB, 64bit, x64 WindowsOS 11 JAVA_VERSION=”11.0.13” Oracle DataBase21C(Main) Version 21.3.0.0.0 JDBC: OJdbc Driver 11Download OJDBC DriverOracle21 을 Java DB 로 사용하기 위해서는 OJDBC Driver 가 필요합니다.JDBC 에 관하여: https://dev-michelangelo.github.io/posts/WhatIsJDBC/https://www.oracle.com/kr/database/technologies/appdev/jdbc.html 에서 다운로드 할 수 있습니다.Oracle DB와 JDK 환경에 맞춰 다운로드 하면 됩니다. 작성자는 Oracle21C, JDK11 과 호환되는OJDBC11 을 사용합니다. Download 후 압축해제 합니다.New ConnectionData Source Explorer → DataBase Connections → New 로 이동 후 Oracle Database 를 선택합니다.New Driver DefinitionNew Driver Definition 아이콘을 클릭합니다.Name/Type 탭에서 Oracle Driver Version 을 선택합니다. 저는 11을 선택했습니다.JAR List 탭에서 OJDBC 14 를 삭제한 후 이전 과정에서 설치한 OJDBC 를 연결합니다. 항상 JAR List 에 14이디폴트로 설정되어 있던데, 이유가 궁금하니 다음에 한번 찾아봐야겠습니다. Properties 를 확인하고 종료합니다.DataBase Instance 를 SID 로 체크하고 전역 데이터 베이스명을 입력합니다.이후, User Name 과 PW 를 입력합니다.Test Connection 결과를 확인합니다. 작성자는 MacOS 에서 이 과정 중 Ping Fail 을 겪은적이 많습니다.덕분에 의도치 않게 에러를 많이 알게 되었는데, 이부분은 정리해서 나중에 업로드 하려고 합니다.성공적으로 연결된 모습입니다." }, { "title": "What is JDBC - JDBC에 관하여", "url": "/posts/WhatIsJDBC/", "categories": "Language, Java", "tags": "what_is", "date": "2022-03-18 04:45:00 +0900", "snippet": "Java Database ConnectivityJDBC 는 DataBase 연결과 작업을 위한 Java 표준 인터페이스로,Java 프로그램이 DB와 연결되어 Data 를 주고 받을 수 있게 해주는 Programming Interface 입니다.Function쉽게 말하면 통역자의 역할을 합니다. JDBC API 가 없던 때는 DB 의 종류마다각각의 SQL 문 을 사용했어야 했습니다. 때문에, DB 의 종류에 따라 SQL 문의 작성 방법의 차이가 커구현이 불편했습니다. 그래서 메서드나 전역변수 등을 통합하는 문법으로 통합한 것이 JDBC 입니다.응용프로그램과 DBMS 간의 통신을 번역Java.sql.package위 기능의 수행을 위해 Java 에서 제공하는 Interface 입니다.JDBC Driver managerJDBC 아키텍처 중핵을 이룬 모듈에서 Java 의 프로그램과 JDBC 드라이버의 접속을 공급하는 기능을 수행.JDBC Driver APIJDBC 드라이버 매니저와 각 DBMS 의 벤더에서 제공하는 JDBC 드라이버가 서로 접속하기 위한 Interface.JDBC DriverJDBC Driver 와 DBMS 접속을 제어하는 모듈로, 통상적으로 JDBC 드라이버는 각각 DBMS 벤더에서 제공하는DBMS 에 ‘어떤 형태로 접속하는가’ 에 의해 크게 네가지 종류로 나눌 수 있으며, JDBC 에서 JAVA 프로그램에사용하는 JDBC 드라이버 매니저와 DBMS 에 의존하는 JDBC 드라이버를 분리하는 것에서DBMS 벤더에 의존하지 않는 환경을 제공." }, { "title": "Ora-65096 Invalid common user or role name", "url": "/posts/Ora65096InvalidCommonUserOrRoleName/", "categories": "WindowOS, WebDev-Setting", "tags": "setting", "date": "2022-03-16 05:27:00 +0900", "snippet": "환경 11th Gen Intel(R) Core(TM) i5-1135G7 @ 2.40GHz 2.40 GHz, RAM: 8.00GB, 64bit, x64 WindowsOS 11 JAVA_VERSION=”11.0.13” Oracle DataBase21C(Main) Version 21.3.0.0.0 SQL*Plus: Release 19.0.0.0.0⚠️ Ora-65096 Invalid common user or role name혹은, ‘⚠️ ORA-65096: 공통 사용자 또는 롤 이름이 부적합 합니다.’ Error 는 Oracle12C 이후 계정생성 시c## 을 붙여줘야 생성이 가능하도록 변경되어 발생되는 오류 입니다.물론, 번거롭기 때문에 아래 쿼리문을 사용해 12C 이전 Version 처럼 작성이 가능합니다.ALTER SESSION SET \"_ORACLE_SCRIPT\"=true;" }, { "title": "Creating an Oracle database user", "url": "/posts/CreatingAnOracleDatabaseUser/", "categories": "WindowOS, WebDev-Setting", "tags": "setting", "date": "2022-03-16 05:27:00 +0900", "snippet": "환경 11th Gen Intel(R) Core(TM) i5-1135G7 @ 2.40GHz 2.40 GHz, RAM: 8.00GB, 64bit, x64 WindowsOS 11 JAVA_VERSION=”11.0.13” Oracle DataBase21C(Main) Version 21.3.0.0.0 SQL*Plus: Release 19.0.0.0.0Oracle DBMS를 위해, SQL Plus 를 사용합니다.SQL PlusCMD 에 sqlplus 를 입력해 SQL 을 실행합니다.권한 부여를 위해 관리자 계정 로그인 한 뒤, conn/as sysdba 명령을 통해 Oracle sysdba 에 접속합니다.이후 아래 명령을 통해 계정을 생성합니다.Create Accountcreate user &lt;ID&gt; identified by &lt;PW&gt;;만약, 생성 후에 PW 를 변경하고 싶다면, 아래 명령으로 변경합니다.alter user &lt;ID&gt; identified by &lt;PW&gt;;⚠️ ORA65096: ErrorOracle12c Version 이후 부터 계정 생성및 권한 부여 시, ID 값 앞에 c##을 붙여줘야 합니다.번거롭다면 참고: https://dev-michelangelo.github.io/posts/Ora65096InvalidCommonUserOrRoleName/Authorization아래 명령을 통해 권한을 부여합니다.grant connect, resource dba to &lt;ID&gt;;이후, commit 명령으로 Commit 합니다.Change portOracle 21C 의 경우 Port 충돌이 없어, 따로 변경하지 않았지만 11g 의 경우 Tomcat 과의 충돌이 있었습니다.이는 Oracle 과 Tomcat 이 모두 Port8080 을 사용하기 때문인데, 기호에 따라 다르겠지만작성자는 Tomcat 의 Port 를 변경하기 보다 Oracle 의 Port 를 변경하는 편 입니다. 결과는 동일합니다.아래 명령을 통해 현재 Port 를 확인합니다.select dbms_xdb.gethttpport() from dual;아래 명령으로 Port8080 을 Port9090 으로 교체합니다.exec dbms_xdb.sethttpport(9090);" }, { "title": "Install Oracle", "url": "/posts/InstallOracle/", "categories": "WindowOS, WebDev-Setting", "tags": "setting", "date": "2022-03-16 04:24:00 +0900", "snippet": "환경 11th Gen Intel(R) Core(TM) i5-1135G7 @ 2.40GHz 2.40 GHz, RAM: 8.00GB, 64bit, x64 WindowsOS 11 JAVA_VERSION=”11.0.13” Oracle DataBase21C(Main) Version 21.3.0.0.0작성자는 그동안 Oracle 11gXE 를 사용했었는데, 11g 가 서비스가 종료되어 더이상 다운로드 받을 수 없어이렇게 된 김에 가장 최신 버전인 21C 를 사용하였습니다.💡Info of 21C : https://docs.oracle.com/en/database/oracle/oracle-database/21/whats-new.htmlDownload2022.02 기준 Oracle 웹페이지 내에 아직 별도의 Oracle21C 다운로드 페이지가 없습니다.21C 는 19C 다운로드 페이지 하단 섹션에서 환경에 맞춰 다운로드 하면 됩니다.작성자의 경우는 Oracle Home 이 설치될 구역과 Oracle DB 를 별도로 분리해 사용합니다.때문에, Oracle Home 으로 사용할 Oracle 폴더에 압축 해제 했습니다.Installsetup 파일을 실행합니다. 데이터베이스 설치 옵션 중 ‘단일 인스턴스’ 옵션을 선택했습니다.시스템 클래스를 데스크톱으로 선택했습니다. 이 블로그를 보고 참고하시는 분들은 대부분 학습 목적일 테니동일하게 선택하셔도 무방합니다.가상계정을 선택합니다.데이터베이스 파일 디렉토리를 이전에 만들어 둔 C:\\OracleDB 로 선택했습니다. 전역 데이터 베이스 이름은별도로 지정할 필요가 없고 비밀번호 규칙도 개인 컴퓨터 작업에서 복잡도를 올릴 이유가 없습니다.⚠️  메모리부족 에러 위 단계에서 필요조건 검사로 넘어가기 전, 메모리 부족 에러가 발생할 수 있습니다.이때, 다른 프로그램들이 실행 중인지 확인하고 Oracle setup 을 제외한 프로그램들을 종료한 후다시 진행하면 에러가 사라집니다.필요 조건 검사 완료 후, ‘요약’ 파트에서 방금 설정한 내용들을 확인 할 수 있습니다.만약 편집하고 싶은 내용이 있다면 편집을 눌러 편집하면 됩니다. 이후 설치를 클릭해 진행합니다.이후 자동으로 설치가 진행됩니다. 시간이 약 15~20 분 정도 소요됐습니다. 설치가 완료되면 종료합니다." }, { "title": "Install Apache Tomcat", "url": "/posts/InstallApacheTomcat/", "categories": "WindowOS, WebDev-Setting", "tags": "setting", "date": "2022-03-15 07:53:00 +0900", "snippet": "환경 11th Gen Intel(R) Core(TM) i5-1135G7 @ 2.40GHz 2.40 GHz, RAM: 8.00GB, 64bit, x64 WindowsOS 11 JAVA_VERSION=”11.0.13” STS4 Version: 4.13.1.RELEASE, Build Id: 202201311654 Apache Tomcat Version 10.0.16Server 연동에 Apache Tomcat 을 사용하려 합니다. 별다른 어려움은 없습니다.DownloadTomcat 웹사이트(https://tomcat.apache.org) 의 Which Versions? 탭을 클릭해 Version 을 확인합니다.작성자는 Java11 을 사용하기 때문에 10.1.M10(alpha) 도 사용이 가능하지만, Maven repository 에 컨텐츠가얼마 없는걸 확인하고, 10.0 version 을 선택했습니다.Download 탭에서 Version 을 선택하고 압축파일을 다운로드 합니다. 이후 압축을 해제합니다.New ServerSTS4의 View → Server 탭에서 No servers are~ 을 클릭, Tomcat Version 을 선택합니다.Browse 를 클릭 하고 Tomcat 디렉토리를 선택합니다.Installed JRE 를 선택하고 STS4 에 자체 내장된 Open JDK 가 아닌 설치한 JDK 를 추가합니다.Add 를 클릭합니다.Standard VM 을 선택하고 Next 를 클릭합니다. 이후 아래와 같이 설치한 JDK 디렉토리를 추가합니다.혹시 제 블로그를 참고하실 분들을 위해 이전글에서 언급을 미리 했지만 이 당시 JDK17 을 사용 중 이었습니다.Spring Legacy Project 를 사용하려면 17 Version 은 맞지 않습니다.💡 참고 : https://dev-michelangelo.github.io/posts/LegacyProjectOnSTS4B/마지막으로, 추가한 JDK 를 선택하고 Apply and Close 를 클릭합니다.New Server B보통 위 과정을 거치면 Server 가 생성이 되는데, 생성되지 않았습니다. 그래서 한번 더 시도합니다.Tomcat Version 선택 후 설치한 JDK 디렉토리 입력 후 아직 Project 생성 전이니, Finish 를 클릭합니다.성공적으로 생성된 모습입니다." }, { "title": "Legacy Project on STS4 B - java.lang.exceptionininitializererror", "url": "/posts/LegacyProjectOnSTS4B/", "categories": "WindowOS, WebDev-Setting", "tags": "setting", "date": "2022-03-15 07:11:00 +0900", "snippet": "환경 11th Gen Intel(R) Core(TM) i5-1135G7 @ 2.40GHz 2.40 GHz, RAM: 8.00GB, 64bit, x64 WindowsOS 11 JAVA_VERSION=”11.0.13” STS4 Version: 4.13.1.RELEASE, Build Id: 202201311654java.lang.exceptionininitializererror모든 준비가 다 끝나고, Legacy Project 를 생성하던 중 java.lang.exceptionininitializererror 가발생했습니다. 경험상 컴파일 에러인 듯 한데, 이것도 Stack Overflow 를 뒤져봐도 나오지 않았습니다.구글링을 했을때 여러가지 방법이 나와있지만, 작성자는 아래 방법으로 해결했습니다.Check Java version첫번째는 Java version 문제입니다. STS Official GitHub 에서 예전부터 Java17을 지원한다는 소식을 보고최신버전인 Java17 을 설치했는데 Spring 자체는 17을 지원하지만, Legacy Project 는 지원하지 않아 생긴문제였습니다. 때문에, Java11 으로 교체했습니다. 하지만 에러는 고쳐지지 않았습니다.Check ini fileStack Overflow 를 보면, ini file 을 수정해 해결한 사례가 몇가지 있었습니다. 하지만 작성자의 경우적용되지 않았습니다. 여러 추론 끝에 아래의 방법으로 해결했습니다.-vmplugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_17.0.1.v20211116-1657/jre/bin원본은 위와 같이 -vm 에 Open jdk 가 설정되어 있습니다. 아마 Open JDK 를 지원하지 않거나작성자와 Java version 이 맞지 않거나 둘 중 하나라 생각해, 기존의 내용을 지우고현재 설치한 Java11 의 path 를 작성해 구동했습니다.💡 이후 혹시 몰라 한번 더 Java17 버전으로 교체하고 path 를 재입력 한 뒤, Java version 을 17 으로 작성한 뒤구동해 보았으나 동일한 오류가 발생했습니다. 때문에, Java11 을 권장합니다. 정상적으로 Legacy Project 가 생성된 모습입니다. Programming 은 세팅이 반이라는 말이 너무 공감됩니다." }, { "title": "Legacy Project on STS4 A - STS4 Legacy Project 생성", "url": "/posts/LegacyProjectOnSTS4A/", "categories": "WindowOS, WebDev-Setting", "tags": "setting", "date": "2022-03-15 06:24:00 +0900", "snippet": "환경 11th Gen Intel(R) Core(TM) i5-1135G7 @ 2.40GHz 2.40 GHz, RAM: 8.00GB, 64bit, x64 WindowsOS 11 JAVA_VERSION=”11.0.13” STS4 Version: 4.13.1.RELEASE, Build Id: 202201311654Where is Spring Legacy Project on STS4?STS4 는 Spring Legacy project 를 지원하지 않습니다. 작성자는 오랫동안 eclipse photon ver 을사용했기 때문에, 초반에 번거로움이 있었습니다.STS3 Add-on for STS4STS3 를 사용하면 간단히 해결할 문제지만, 구버전을 사용하고 싶진 않아 방법을 찾았습니다.Help → Eclipse Marketplace 로 이동, STS 를 검색하고, Spring tools 3 Add-on 을 Install 합니다.전체 체크한 후 Confirm 합니다.accept 후 Restart 합니다.Dashboard 가 나타나면 성공입니다.Where is Data Source Explorer, SQL file on STS4?초기 설정을 해주고자 Perspactive 를 확인하자 몇가지가 없는게 눈에 보이고,Show View → Data Source Explorer WEB -&gt; SQL,CSS,XML file 들이 표시되지 않습니다.Stack Overflow 를 한참 뒤졌는데도 나오지 않아 여러가지 실험한 끝에 아래와 같이 해결했습니다.Help → Install New SoftwareWork with: 을 보면 https://download.eclipse.org/realeses/lastest 가 있습니다. 버전 업을 위한링크일까 싶어, 원래 사용하던 Photon 을 lastest 부분에 입력해 검색하니 원하던 결과를 얻을 수 있었습니다.필요한 Tools 은 Database Development, Web, Xml ~ 이기 때문에, 작성자는 두가지만 체크했습니다.Market Place 와 설치방법은 동일합니다. Next → accept 합니다.중간에 위와 같은 창이 나오는데, Trust Seleted 를 클릭하고 Restart 합니다.Data Source Explorer 가 Show view 에 생성되었고, 나머지도 원하는 결과를 얻었습니다.UTF-8 Setting한글이 깨지면 곤란하기에, UTF-8 세팅을 해줍니다.CSSPreferences → Web → CSS file 로 접근해 Encoding: 을 UTF-8 으로 적용합니다. 이하 동일합니다.Web → HTML filesWeb → JSP filesXML → XML files마지막으로 Workspace 도 동일하게 설정합니다." }, { "title": "Install STS4 - Eclipse", "url": "/posts/InstallSTS4/", "categories": "WindowOS, WebDev-Setting", "tags": "setting", "date": "2022-03-15 05:13:00 +0900", "snippet": "환경 11th Gen Intel(R) Core(TM) i5-1135G7 @ 2.40GHz 2.40 GHz, RAM: 8.00GB, 64bit, x64 WindowsOS 11 JAVA_VERSION=”11.0.13” STS4 Version: 4.13.1.RELEASE, Build Id: 202201311654Java programming 이 목적이라면 Eclipse 를 사용해도 관계 없지만, 목적이 Spring Web 개발이라면STS 를 선택하는 것도 좋은 방법입니다.Download STS4Spring 웹사이트(https://spring.io/tools) 에 진입하고 환경에 맞춰 다운로드 합니다.💡 MacOS :Install STS4STS4는 최근 Jar 압축형식을 사용합니다. CMD 를 사용해 압축해제가 가능하지만, 번거롭기 때문에 반디집을사용합니다. 알집을 사용하면 가끔 컴파일 에러가 나는 경우가 생겨 사용하지 않습니다.압축을 두번 풀어줘야 합니다. contents 의 압축을 풀고, 내부파일을 보면 STS4 실행 파일이 있습니다.작업표시줄에 고정하면 편리합니다. 최근들어 jar 형식이나 tar 형식의 압축 파일이 늘어나는 것 같습니다.시간이 날 때, 이유를 찾아보려고 합니다.Workspace 디렉토리를 지정합니다. 개인적으로 pathname 이 긴걸 좋아하지 않아,개인 작업에서는 depth 를 얕게 설정 하는편 입니다.전체적인 GUI 나 기능은 Eclipse 와 큰 차이는 없습니다." }, { "title": "Install JDK - Java11,Java17", "url": "/posts/InstallJDK/", "categories": "WindowOS, WebDev-Setting", "tags": "setting", "date": "2022-03-14 11:51:00 +0900", "snippet": "환경 11th Gen Intel(R) Core(TM) i5-1135G7 @ 2.40GHz 2.40 GHz, RAM: 8.00GB, 64bit, x64 WindowsOS 11 JAVA_VERSION=”11.0.13”💡 본 글에 첨부된 이미지는 Java17 이나, 작성자는 Spring Legacy 를 위해 이후 Java11 으로 교체 했습니다.만약, Spring Legacy 를 위해 설치한다면, Java 11 설치를 권장합니다. 설치와 설정과정은 11 과 17 동일합니다.Make DirectoryC:\\ 에 Resource 폴더를 생성합니다. 기호에 따라 다를 수 있지만, 작성자의 경우는 설치파일을 일정기간 보관합니다. 만약 문제가 발생하면 프로그램을 지우는 경우가 생기는데 다시 다운로드 하기 번거롭기 때문입니다.Install JDKGoogle 혹은 Oracle 페이지에서 Java 11 을 검색해 Download 페이지로 이동합니다.본인의 환경에 맞는 JDK 를 다운로드 합니다.설치파일을 실행하고 설치 디렉토리를 설정합니다. 따로 지정하지 않아도 무방하나 작성자는 Pathname 이길어지는걸 불호하기 때문에, C:\\ 바로 하위에 설치했습니다.이후 이전 버전과 다르게 간단히 설치됩니다.Setting Java PathWindows+R ’sysdm.cpl’ 검색으로 시스템 속성/고급 -&gt; 환경변수로 진입합니다.시스템변수의 새로만들기 를 클릭하고 변수이름을 지정, 변수 값에 JDK 가 설치된 디렉토리를 입력합니다.확인을 클릭해 저장한 후 path 를 선택한 후 편집 을 클릭합니다.환경변수 편집창 우측에 새로만들기 를 클릭한 후 %&lt;시스템 변수명&gt;%\\bin 을 추가합니다.이후 ‘위로 이동’ 을 사용해 맨 위로 올려줍니다. 사실 위로 이동은 하지 않아도 되는데 작성자가 알기로,쉽게 컴파일 에러를 방지하는 목적이라고 알고 있습니다.CheckCMD 에 javac -version java -version 을 입력해 설치를 확인합니다.path 를 입력해 Path 가 정상적으로 설정 됐는지 확인합니다.⚠️ ‘javac은(는) 내부 또는 외부 명령, 실행 할 수 있는 프로그램, 또는 배치 파일이 아닙니다’ 응답 시, 환경변수 설정을 다시 확인합니다.⚠️ 앞서 언급했지만, 최근버전의 eclipse 나 STS 를 사용해 Spring Legacy project 를 사용할 용도라면, Java 11 을 사용해야 합니다. Legacy Project 가 Java17 을 지원하지않기 때문입니다. Boot 를 사용한다면 관계 없습니다." }, { "title": "GitHub Pages C - 깃허브 블로그", "url": "/posts/PagesC/", "categories": "Git, Pages", "tags": "setting", "date": "2022-03-14 09:27:00 +0900", "snippet": "환경 MacBook Pro(Intel Core) Monterey OS(Version 12.2.1) git version 2.32.0 (Apple Git-132) ruby 3.1.1p18 (2022-02-18 revision 53f5fc4236) [x86_64-darwin21]FaviconFavicon 은 웹 브라우저의 주소창, 탭의 아이콘입니다. 작성자가 사용 중인 ‘Chirpy’ 테마는 기본 Favicon 이개미로 설정되어 있습니다. 작성자가 속한 ‘Team Davinci’ 의 컨셉은 르네상스고 팀원들은 그에 맞는 이미지로활동을 하고 있기 때문에, 개미와는 컨셉상 거리가 멀어 Favicon 을 교체했습니다.Generate Favicon‘Chirpy’ wiki 의 Favicon(https://chirpy.cotes.page/posts/customize-the-favicon/) 에서 추천하고 있는‘Real favicon generator(https://realfavicongenerator.net)’ 를 사용해 간단히 생성할 수 있습니다.좌측 상단의 ‘Select your Favicon image’ 를 클릭하여 Favicon image 를 첨부합니다.Pages 의 favicon 디렉토리 경로를 입력합니다. 이후, 아래 Generate your~ 을 클릭합니다.Favicon package 를 다운로드 한 후 이미지 파일들을 기존의 Favicon 디렉토리에 대치한 후 Push 합니다.💡 ’Chirpy’ 의 경우 Safari 에 대응하는 HTML 이 없어, Favicon 이 적용이 안됐습니다.때문에 위의 HTML 중 아래 Safari 관련 코드를 _includes/favicon.html 에 삽입해야 합니다.&lt;link rel=\"mask-icon\" href=\"&lt;경로&gt;/safari-pinned-tab.svg\" color=\"#000000\"&gt;Comment BoxChirpy 는 기본적으로 disqus Comment Box 를 사용합니다.하지만, disqus 는 유료서비스를 이용하지 않는다면 광고를 표시해 미관상 좋지 않습니다.게다가 무겁다는 단점까지 갖고있어 대체제인 utterances 를 사용하겠습니다.utterancesutterances 는 상대적으로 가볍고, Github Repository 의 Issue 를 이용하기 때문에, 메일로 댓글알림을 받을 수 있다는 장점이 있습니다.Create Repository사실 굳이 새로운 Repo 를 생성하지 않아도 됩니다. 하지만 작성자는 따로 깔끔하게 관리하고 싶어, Repo 를 추가로 생성했습니다.Install utterancehttps://github.com/apps/utterances 로 접속합니다.좌측 상단의 Install 을 클릭합니다.모든 Repo 의 Issue 를 사용, 지정된 Repo 의 Issue 를 사용 중 선택하면 됩니다.작성자의 경우는 지정된 공간에서 관리하고자 Repo 를 생성했기 때문에, ‘Only select repo’ 를 선택했습니다.Configuration 의 Repository 의 repo: 에 &lt;GitHub Name&gt;/&lt;Repo Name&gt; 을 입력합니다.Blog Post Issue Mapping 에서는 댓글이 생성된 블로그 페이지의 어떤 부분과 Issue 를 매핑할지‘Key’ 를 선택합니다. Key 에 변동이 생긴다면, Value 는 사라지게 되므로, 이점을 생각해서 선택하면 됩니다.저의 경우는 Path 를 변경할 일이 없다고 생각해 Path 를 선택했습니다.Theme 를 선택합니다. 이후 Copy 합니다.Set다른 Theme 는 어떤지 모르겠지만 Chirpy 의 경우는 _layouts/post.html 맨 하단에 Past 한 후 Push 합니다.Search Engine OptimizationSEO 는 간단하게 ‘웹 사이트의 검색 결과에 보다 높은 노출이 가능하도록 최적화를 시키는 것’ 입니다.작성자는 Pages A 에서 언급한 이유로 해외 접근성이 좋은 Google 에서 진행합니다.Google Search ConsoleGoogle Search Console(https://search.google.com/search-console/about) 로 진입한 후‘시작하기’ 를 클릭 합니다.URL 접두어를 선택한 뒤 Pages 의 주소를 입력합니다.‘Chirpy’ 의 경우 HTML 태그를 활용하여 확인을 별도로 받을 수 있지만, 오류가 난 적이 있어 안전하게 파일을다운로드 하겠습니다. 이후, 다운로드 한 html 파일을 Pages 디렉토리에 배치한 후 Push 합니다.Push 가 완료되면 소유권 확인이 가능합니다.sitemap.xmlsitemap.xml 은 사이트에 방문하는 검색엔진의 크롤러를 제어하기 위해 사용합니다. 직접 작성도 가능하겠지만간단하게 자동생성 사이트를 이용하는 방법이 있습니다. https://www.xml-sitemaps.com 로 진입 합니다.‘Just Enter your website~’ 아래 검색창에 Pages 주소를 입력하고 Start 를 클릭합니다.진행 창이 나오고 진행이 완료되면, ‘View Sitemap Details’ 를 클릭합니다.중단의 Download your XML Sitemap file 을 클릭합니다. 이후 다운로드 받은 XML 파일을 Pages 디렉토리로 이동합니다.robots.txtPages 디렉토리에 robots.txt 파일을 생성한 후, 아래 양식대로 작성합니다.User-agent: GooglebotDisallow: /nogooglebot/User-agent: *Allow: /Sitemap: &lt;Pages 주소&gt;/sitemap.xmlCheck&lt;Pages주소&gt;/sitemap.xml 로 접속하여 위처럼 나온다면 (Safari 기준, 다른 브라우저는 코드형식일 수 있음)정상적용된 것 입니다.Add SitemapGoogle Search Console 사이드바의 Sitemap 을 클릭하고 sitemap.xml 을 입력하고 제출합니다.이후 크롤링 완료까지 ‘가져올 수 없음’ 상태가 표시됩니다. 오류는 아니니 걱정하지 않아도 되고,길게는 약 하루정도 소요됩니다." }, { "title": "GitHub Pages B - 깃허브 블로그", "url": "/posts/PagesB/", "categories": "Git, Pages", "tags": "setting", "date": "2022-03-14 06:41:00 +0900", "snippet": "환경 MacBook Pro(Intel Core) Monterey OS(Version 12.2.1) git version 2.32.0 (Apple Git-132) ruby 3.1.1p18 (2022-02-18 revision 53f5fc4236) [x86_64-darwin21]Tools/init.sh이전에 Jekyll serve 를 통해 로컬 서버에서 구동한 Page 는 Chirpy 의 소개 페이지 입니다.커스텀 하기 위해 기본 컨텐츠를 지워야 합니다. 개별 변경도 가능하지만, 번거로우니 한번에 초기화 하겠습니다.MacOS는 Terminal, WindowOS는 Git Bash 를 사용, cd 명령어로 Pages 디렉토리로 이동해 tools/init.sh 명령을 입력합니다. 그리고 다시 로컬서버를 가동시키면 기본 컨텐츠가 사라집니다._Config.yml거의 대부분의 설정을 변경할 수 있습니다. 저는 VSCode 를 사용하겠습니다. Element Content lang: Language of the webpage timezone: Your timezone title: Main title tagline: Sub-title description: &gt;- Seo meta and the atom feed url: Fill in the protocol &amp; hostname for your site github: Fill in your github username. social.name: Fill in your full name. social.email: Fill in your email address. social.links: Fill in your social links. google_analytics: Fill in your Google Analytics. theme_mode: Theme Mode avatar: Avatar on sidebar(Fill your Avatar image path) Search Timezone: http://www.timezoneconverter.com/cgi-bin/findzone/findzone avatar 부분은 보통 /assets/img/ 디렉토리를 연결합니다. Social 의 링크부분 중 쓰지 않는 부분은 주석처리해도 무방합니다.⚠️ Error Gemfile.lock확인해 본 결과 보통의 Jekyll Theme 는 이후 GitHub 로 바로 Push 하면 즉각 적용이 가능합니다.하지만, ‘Chirpy’ 는 현재 시점에서 Push 를 하면 _Config.yml 제대로 적용이 안되는 현상을 겪었습니다.그래서 같은 과정을 몇번 정도 반복하며 분석해 본 결과 Tools/init.sh 명령이 .gitignore 의Gemfile.lock 을 삭제 시키는 현상을 발견했습니다. 이후 Gemfile.lock 파일을 아예 삭제한 후 Push를 하니 정상적으로 수정내용이 반영되었습니다. Local serverGemfile.lock 파일을 삭제한 후 수정 내영이 정상 반영 되었으나 아마, Gemfile.lock 이 local server 의 어떤 부분과 연관이 있는 것 같습니다. 실험 해보지는 않았지만 Gemfile.lock 파일을 삭제하면 더는 local server 에서의 구동이 불가합니다. 때문에 삭제보다는 .gitignoer 에 Gemfile.lock 추가를 권장합니다.PushPush 한 후, GitHub 의 Actions 탭을 확인하면 페이지 반영 결과를 확인할 수 있습니다." }, { "title": "GitHub Pages A - 깃허브 블로그", "url": "/posts/PagesA/", "categories": "Git, Pages", "tags": "setting", "date": "2022-03-14 06:28:00 +0900", "snippet": "환경 MacBook Pro(Intel Core) Monterey OS(Version 12.2.1) git version 2.32.0 (Apple Git-132) ruby 3.1.1p18 (2022-02-18 revision 53f5fc4236) [x86_64-darwin21]개발자에게 포트폴리오는 굉장히 중요한 요소입니다. 지나온 족적이나 앞으로의 활동이 게시되는 공간으로,혹은 Cloud 와 같이 오류나 이론을 저장해두거나, 이를 바탕으로 한 교류의 공간으로 사용될 수 있기 때문입니다.때문에, 자신의 지향목표에 맞추어 선택하는 편이 좋습니다.작성자 같은 경우 향후 캐나다 취업을 목표로 하기도 하고, 주요 기술이 Web/App Programming 이기 때문에해외 유입 접근성이 용이하고, 주요 기술을 잘 활용할 수 있는 ‘GitHub Pages’ 를 선택하게 됐습니다.기존에 사용하던 네이버 블로그는 위 두가지 니즈가 충족되기 어려웠기 때문입니다.Install Ruby&amp;Jekyll제작한 GitHub Page 의 결과는 GitHub 에 Push 한 후 확인할 수 있습니다. 하지만, 반영되는 딜레이도 있고번거롭습니다. 때문에, 일반적으로 로컬 서버를 활용하여 즉각적인 반영결과를 보며 Page 를 구축합니다.작성자는 Ruby 와 Jekyll 을 사용해 로컬서버를 사용하겠습니다.Install Ruby MacOShttps://dev-michelangelo.github.io/posts/Ruby/ WindowOSInstall JekyllMacOS 는 Terminal, WindowOS 는 Ruby 프롬포트를 사용합니다.아래 명령을 입력합니다.gem install Jekyll bundlerJekyll -v 를 입력해 설치를 확인합니다.Jekyll Theme직접 Page 를 구성할 수 도 있지만, 저는 한동안 편리하게 테마를 사용할 계획입니다.http://jekyllthemes.orgJekyll Theme 사이트에서 맘에 드는 테마를 선택합니다. 저는 ‘Chirpy’ 테마로 선택했습니다.테마 선택 후 Hompage 를 클릭합니다. 압축파일을 다운로드 할 수 있지만 GitHub 를 사용하겠습니다.Fork제작자의 GitHub 로 이동되고 좌측상단의 Fork 를 클릭합니다.Fork 된 Repo 의 이름을 아래 형식으로 수정합니다.&lt;GitHubName&gt;.github.ioEx: DevMichelangelo.github.ioCloneGitHub 의 Repo 를 Clone 합니다. 저는 GitHub Desktop 을 사용합니다.Page Repo 를 선택하고 Clone 합니다.개인적으로 Path 가 깊은걸 좋아하지 않아 변경했습니다. 수정없이 Clone 해도 무방합니다.좀전의 Path 에 파일이 생성되었습니다. 보통 Documents 안에 생성될 겁니다.Connect Local servercd 명령어를 통해 Page 저장소로 이동한 후 bundle 을 입력해 의존성 모듈을 설치합니다.설치가 완료되면 jekyll serve 를 입력해 local server 를 구동합니다.Server adress 로 접속해보면 테마가 적용된 Page 를 확인할 수 있습니다.Command+C 혹은 Ctrl+C 를 누르면 Server 를 종료할 수 있습니다." }, { "title": "Ruby on MacOS - 맥 루비 설치(rbenv)", "url": "/posts/Ruby/", "categories": "MacOS, Ruby", "tags": "setting", "date": "2022-03-14 06:00:00 +0900", "snippet": "Ruby is a programming language , used generally for web development , through a ruby library called rails .Under macOS , ruby comes pre-installed , and it can be found under : /System/Library/Frameworks/Ruby.framework/Versions/ . Starting macOS Catalina version 10.15 , this is deprecated , and future versions of macOS might not contain ruby by default .Rbenv is a ruby version manager , which allows to select the ruby version to be active . It also allows to install multiple versions of ruby .Rbenv installs under the current user directory : ~/.rbenv , and the installed ruby versions , are installed , under : ~/.rbenv/versionsMac 은 기본적으로 Ruby 를 가지고 있습니다. 하지만 오래된 버전이기 때문에 지금과 맞지 않는 부분이 많습니다. 일반적으로 Homebrew 를 사용해 Ruby 를 설치할 수 있지만, 설치한 Ruby 가 실행 되진 않습니다. 때문에 Rbenv 를 사용해 실제로 사용할 Ruby 버전을 지정해야 합니다. 본 글은 영어로 작성되어 있지만 순서대로 따라하면 문제 없습니다. 다만, Zsh, bash 확인이 필요합니다.환경 MacBook Pro(Intel Core) Monterey OS(Version 12.2.1) git version 2.32.0 (Apple Git-132)First clone rbenvusing the following command :git clone https://github.com/rbenv/rbenv.git ~/.rbenvThen executecd ~/.rbenv &amp;&amp; src/configure &amp;&amp; make -C src If macOS before catalina , and using bash , execute :echo 'export PATH=\"$HOME/.rbenv/bin:$PATH\"' &gt;&gt; ~/.bash_profile If macOS catalina and after , and using zsh , execute :echo 'export PATH=\"$HOME/.rbenv/bin:$PATH\"' &gt;&gt; ~/.zshrcExecute~/.rbenv/bin/rbenv initOpen Nano editor If bash executenano ~/.bash_profileand to autoload rbenv , add :eval \"$(rbenv init -)\"ctrl-x , to save and exit. If zsh executenano ~/.zshrcand to autoload rbenv , add :eval \"$(rbenv init - zsh)\"Ctrl-x , to save and exit.Execute If the default shell is bash . Usually , this is true for MacOS versions , prior to Catalina .source ~/.bash_profile If the default shell is zsh . Usually this is true , for MacOS Catalina , and after .source ~/.zshrcInstall ruby build , to install ,versions of rubymkdir -p \"$(rbenv root)\"/pluginsgit clone https://github.com/rbenv/ruby-build.git \"$(rbenv root)\"/plugins/ruby-buildVerify rbenv has been installed correctlycurl -fsSL https://github.com/rbenv/rbenv-installer/raw/main/bin/rbenv-doctor | bashShow the lastest stable releasesrbenv install --listInstall Rubyrbenv install &lt;Version&gt;rbenv rehashrbenv rehashVersion Check(rbenv)rbenv versionsSet globalrbenv global &lt;Version&gt;Version check(Ruby)ruby -v" }, { "title": "Homebrew", "url": "/posts/Homebrew/", "categories": "MacOS, Homebrew", "tags": "Setting", "date": "2022-03-14 05:54:00 +0900", "snippet": "일반적으로 어떤 프로그램을 Mac 에 설치하는 과정은 아래와 같습니다.설치프로그램 다운로드 -&gt; 설치프로그램 실행 -&gt; 환경설정 -&gt; 설치완료Homebrew 를 사용하면 위 과정을 효과적으로 간소화할 수 있습니다.환경 MacBook Pro(Intel Core) Monterey OS(Version 12.2.1) brew version Homebrew 3.4.0Installhttps://brew.sh 에 방문합니다.페이지 중단의 Install Homebrew 설치 명령어를 Terminal 에 Copy&amp;Past 합니다./bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"이후, Return 을 누르고 관리자 PW 를 입력합니다.(PW 는 표시되지 않습니다.)아래와 같이 ‘Press Return to~’ 가 나오면, Return 을 한번 더 눌러 진행하면 설치가 완료됩니다.CommandCommand 를 통해 Homebrew 를 활용할 수 있습니다. 아래는 비교적 자주 사용하는 Command 입니다.$ brew update$ brew search &lt;PackageName&gt;$ brew install —cask &lt;PackageName&gt;[@Version]Ex. brew install mysqlPackage check$ brew listPackage Info$ brew info &lt;PackageName&gt;Update$ brew outdated // Check need Update$ brew upgrade &lt;PackageName&gt; // Package Update$ brew upgrade // All packages UpdateUninstall$ brew cleanup // all package uninstall of last version$ brew uninstall &lt;PackageName&gt; // Uninstall Homebrew Uninstall$ /ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/uninstall)\"https://cmjunghoon.github.io/posts/Install_Ruby/Install PackageHomebrew Command 중 brew install 을 통해 패키지를 설치해보겠습니다.저는 맥을 한번 초기화 한 상태라 당장 필요한 VSCode, Chrome, Github Desktop 을 설치하겠습니다.위처럼 Homebrew 를 사용하면 다수의 프로그램을 간단한 명령어 한줄로 동시 설치 진행할 수 있습니다.💡 패키지 검색https://brew.sh 의 상단 ‘Search Homebrew’에 원하는 패키지를 검색하면 패키지 이름을 알 수 있습니다." }, { "title": "What is git - git에 관하여", "url": "/posts/WhatIsGit/", "categories": "Git, git", "tags": "what_is", "date": "2022-03-14 04:30:00 +0900", "snippet": "환경 MacBook Pro(Intel Core) Monterey OS(Version 12.2.1) git version 2.32.0 (Apple Git-132)Version Control System(VSC)긴 작업기간을 필요로 하는 작업을 Word, PPT 로 진행할 때, 저장하지 않은 상태에서 컴퓨터가 급작스럽게종료 되더라도 Cloud 서비스를 통해 내용이 소실되는걸 지킬 수 있습니다.혹은 게임에서의 Checkpoint 기능을 통해 저장된 시점으로의 이동도 가능합니다.What is VSC?위의 기능들은 VSC(Version Control System) 의 기능과 유사한 기능입니다.공학과 소프트웨어 개발에서 팀 단위로 개발중인 소스코드나 설계도등 디지털 문서를 관리하는데 사용됩니다.VSC 의 버전관리(Version control), 소스관리(source control), 소스코드관리(source code management) 를 통해 동일한 정보에 관한 여러버전을 관리할 수 있고 팀 단위의 작업에서 서로간의 작업물 상태를 동일하게 유지시키는 기능이 있습니다. VSC 는 많은 종류가 있고 그 중 git 이 대표적입니다.gitgit은 VCS 종류 중 리눅스 커널 개발자인 ‘리누스 토르발스’ 에 의해 개발되고 2005년에 출시된 ‘분산버전시스템’ 중 하나입니다. 개발당시 완벽한 분산환경에서 빠르고 단순하게 수천개의 동시 다발적인 브랜치 작업이 수행 가능하고, 리눅스 커널같은 대형 프로젝트의 버전관리를 가능하게 하고자 하는 니즈를 토대로 개발되었습니다.Advantages of git 전세계 단위의 보유유저 수 git 소셜 사이트인 Github 보유 유저 수에서 나오는 엄청난 단위의 튜토리얼과 프로젝트Structure and Function of gitgit 은 크게 ‘mater’ 서버와 mater 저장소의 완전한 사본을 가지는, Client 저장소로 구정됩니다.서버와 클라이언트 둘 다 완전한 저장소를 가지고 있어, 저장소를 하나의 프로젝트라고 볼 수 있습니다.Function of git 로컬 및 원격 저장소 생성 로컬 저장소에 파일 생성 및 추가 수정 내역 로컬 저장소에 제출 파일 수정내역 추적 원격 저장소에 제출된 수정 내역을 로컬 저장소에 적용 master에 영향을 끼치지 않는 브랜치 생성 브랜치 사이의 병합 브랜치를 병합하는 도중의 충돌 감지How to install git?MacOS는 Homebrew 혹은 XCode 설치 시 git이 함께 설치됩니다.WindowOS :MacOS : https://dev-michelangelo.github.io/posts/Homebrew/git Setting git을 사용하려면 git 회원 가입이 필요합니다. 회원가입은 https://github.com 에서 간단히 가능합니다. MacOS 는 Terminal WindowsOS 는 ‘Git Bash’ 를 실행해 아래 명령어를 차례로 입력합니다.git config --global user.name \"UserName\"git config --global user.email \"User email\" 이후 아래 코드로 확인합니다.git config --l" }, { "title": "Dev_Setting for MacOS", "url": "/posts/DevSettingA/", "categories": "MacOS, Dev_Setting", "tags": "Setting", "date": "2022-03-14 03:58:00 +0900", "snippet": "환경 MacBook Pro(Intel Core) Monterey OS(Version 12.2.1) 이번에 GitHub 와 Pages 를 초기화 하면서, MacBook 도 함께 포맷을 진행했습니다.이 기회에 앞으로 몇가지 작성자의 ‘Dev-setting style’ 을 하나씩 공유할 계획입니다.DockMac 을 처음 샀거나, 초기화를 했을때 볼 수 있는 화면입니다. WindowOS 와 다르게 IPhone, IPad 와 같이아래 App 아이콘들이 있는 모습입니다. 이 부분을 Dock 이라고 합니다.작성자는 저 중 절반은 실제로 사용하지 않고, 특히나 이 MacBook 은 온전한 Programming 용도기 때문에필요한 부분을 제외하고 모두 삭제한 채 사용합니다. App 을 여는데는 Spotlight 를 대부분 사용하기 때문입니다.Dock 의 App 을 우클릭하고, Options &gt; Remove from Dock 을 선택하면 App 을 정리할 수 있습니다.저는 주로 사용하는 Finder, Launchpad, Safari, Notes, Setting 만 두고 모두 정리했습니다.만약 Dock 에 App 을 추가하고 싶다면, Finder &gt; Applications 에서 Dock 으로 Drag&amp;Drop 하면 됩니다.FinderFinder 의 초기 모습입니다. 사용하는데 별 문제는 없지만 조금만 편리하게 만들어 보겠습니다.BarView 탭을 클릭하면 Bar 설정을 할 수 있습니다. 저는 Tab Bar, Path Bar 를 주로 사용합니다.Side BarMacOS 는 사용자가 함부로 폴더나 파일을 변경할 수 없도록 프로그램 상 중요한 폴더나 파일을 숨겨두었습니다.일반 사용자라면 불편함이 없겠지만, 개발자는 Path 설정과 같은 작업을 할 때 불편합니다.때문에, 작성자는 아래와 같이 Hard Disk 등의 설정을 변경합니다.Finder &gt; Preferences 에서 설정이 가능합니다.Hidden FolderSidebar Setting 으로 Disk 는 볼 수 있게 되었지만 사실 아직 폴더와 파일들이 숨겨져 있는 상태입니다.주로 Terminal 로 접근할 수 있고, 편하기 때문에 굳이 사용하지는 않지만 가끔 필요할 경우가 생깁니다.Termnal 에 아래의 명령을 입력하면 숨겨진 폴더를 확인할 수 있습니다.defaults write com.apple.finder AppleShowAllFiles YES이후 option 을 누른 채, Finder 를 우클릭하여 Relaunch 를 클릭합니다만약 다시 숨기고 싶다면, Termianl 에 아래 명령을 입력합니다.defaults write com.apple.finder AppleShowAllFiles NO이후 Relaunch 하면, 다시 숨길 수 있습니다." } ]
